import {MathOperations, OperationType, OperatorType, OutputText} from "../enums";
import {
    add,
    atan,
    cos,
    cubeRoot,
    divide,
    factorial,
    log,
    multiply,
    percentage,
    raise,
    sin,
    squareRoot,
    subtract,
    tan
} from '@utils';
import {IMathOperations} from "../interfaces";

/**
 * Data structure for storing information about mathematical operations
 */
export const mathOperations: IMathOperations = {
    [MathOperations.ADD]: {
        operator: MathOperations.ADD,
        outputText: OutputText.ADD,
        operatorType: null,
        operation: add,
        priorityWeight: 1,
        operands: 2,
        isParenthesesNeed: false,
        operationType: OperationType.SIMPLE,
    },
    [MathOperations.SUBTRACT]: {
        operator: MathOperations.SUBTRACT,
        outputText: OutputText.SUBTRACT,
        operatorType: null,
        operation: subtract,
        priorityWeight: 1,
        operands: 2,
        isParenthesesNeed: false,
        operationType: OperationType.SIMPLE,
    },
    [MathOperations.MULTIPLY]: {
        operator: MathOperations.MULTIPLY,
        outputText: OutputText.MULTIPLY,
        operatorType: null,
        operation: multiply,
        priorityWeight: 2,
        operands: 2,
        isParenthesesNeed: false,
        operationType: OperationType.SIMPLE,
    },
    [MathOperations.DIVIDE]: {
        operator: MathOperations.DIVIDE,
        outputText: OutputText.DIVIDE,
        operatorType: null,
        operation: divide,
        priorityWeight: 2,
        operands: 2,
        isParenthesesNeed: false,
        operationType: OperationType.SIMPLE,
    },
    [MathOperations.FACTORIAL]: {
        operator: MathOperations.FACTORIAL,
        outputText: OutputText.FACTORIAL,
        operatorType: OperatorType.POSTFIX,
        operation: factorial,
        priorityWeight: 3,
        operands: 1,
        isParenthesesNeed: false,
        operationType: OperationType.ADVANCED,
    },
    [MathOperations.PERCENTAGE]: {
        operator: MathOperations.PERCENTAGE,
        outputText: OutputText.PERCENTAGE,
        operatorType: OperatorType.POSTFIX,
        operation: percentage,
        priorityWeight: 3,
        operands: 1,
        isParenthesesNeed: false,
        operationType: OperationType.ADVANCED,
    },
    [MathOperations.RAISE]: {
        operator: MathOperations.RAISE,
        outputText: OutputText.RAISE,
        operatorType: null,
        operation: raise,
        priorityWeight: 3,
        operands: 2,
        isParenthesesNeed: false,
        operationType: OperationType.ADVANCED,
    },
    [MathOperations.SQUARE_ROOT]: {
        operator: MathOperations.SQUARE_ROOT,
        outputText: OutputText.SQUARE_ROOT,
        operatorType: OperatorType.PREFIX,
        operation: squareRoot,
        priorityWeight: 3,
        operands: 1,
        isParenthesesNeed: false,
        operationType: OperationType.ADVANCED,
    },
    [MathOperations.CUBE_ROOT]: {
        operator: MathOperations.CUBE_ROOT,
        outputText: OutputText.CUBE_ROOT,
        operatorType: OperatorType.PREFIX,
        operation: cubeRoot,
        priorityWeight: 3,
        operands: 1,
        isParenthesesNeed: false,
        operationType: OperationType.ADVANCED,
    },
    [MathOperations.LOG]: {
        operator: MathOperations.LOG,
        outputText: OutputText.LOG,
        operatorType: OperatorType.PREFIX,
        operation: log,
        priorityWeight: 3,
        operands: 1,
        isParenthesesNeed: true,
        operationType: OperationType.ADVANCED,
    },
    [MathOperations.COS]: {
        operator: MathOperations.COS,
        outputText: OutputText.COS,
        operatorType: OperatorType.PREFIX,
        operation: cos,
        priorityWeight: 3,
        operands: 1,
        isParenthesesNeed: true,
        operationType: OperationType.ENGINEERING,
    },
    [MathOperations.SIN]: {
        operator: MathOperations.SIN,
        outputText: OutputText.SIN,
        operatorType: OperatorType.PREFIX,
        operation: sin,
        priorityWeight: 3,
        operands: 1,
        isParenthesesNeed: true,
        operationType: OperationType.ENGINEERING,
    },
    [MathOperations.TAN]: {
        operator: MathOperations.TAN,
        outputText: OutputText.TAN,
        operatorType: OperatorType.PREFIX,
        operation: tan,
        priorityWeight: 3,
        operands: 1,
        isParenthesesNeed: true,
        operationType: OperationType.ENGINEERING,
    },
    [MathOperations.ATAN]: {
        operator: MathOperations.ATAN,
        outputText: OutputText.ATAN,
        operatorType: OperatorType.PREFIX,
        operation: atan,
        priorityWeight: 3,
        operands: 1,
        isParenthesesNeed: true,
        operationType: OperationType.ENGINEERING,
    },
}